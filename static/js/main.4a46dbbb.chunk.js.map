{"version":3,"sources":["Square.js","App.js","reportWebVitals.js","index.js"],"names":["Square","squareData","squarePosition","handleChessData","chessClassName","className","onClick","console","log","Board","useState","Array","fill","boardData","setBoardData","next","setNext","gameResult","setGameResult","newBoardData","JSON","parse","stringify","chessColor","nextPlayer","calculateWinner","Data","newChessPosition","x","y","i","j","k","checkerBoardAll","checkerBoardSize","checkerBoardRow","push","creatCheckerBoard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a46dbbb.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\n// square components\nexport default function Square({squareData, squarePosition, handleChessData}) {\n  if (squareData === \"black\" ) {\n    var chessClassName = \"square-black-circle\"\n  } else if (squareData === \"white\") {\n    var chessClassName = \"square-white-circle\"\n  }\n\n  const handleChessClick = () => {\n    handleChessData(squarePosition);\n  };\n\n  return(\n    <div className=\"square\" onClick={()=>console.log(squareData, squarePosition)} onClick={handleChessClick}>\n      <div className={chessClassName}></div>\n      <div className=\"square-column\">\n      </div>\n      \n    </div>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport { useState } from \"react\";\nimport Square from \"./Square\";\n\n\n// board components\nfunction Board() {\n  // 設定棋盤各個十字的資料\n  const [boardData, setBoardData] = useState(Array(19).fill(Array(19).fill(null))); //設定19X19 的棋盤資料\n  const [next, setNext] = useState(true) //True 設定黑棋先下\n  const [gameResult, setGameResult] = useState(\"Next player is: black\") // 設定每次下棋的結果\n\n  //產生棋盤\n  const checkerBoardSize = 19;\n  function creatCheckerBoard () {\n    let checkerBoardAll = [];\n    for (let i=0;i<=checkerBoardSize-1;i++) {\n      let checkerBoardRow = [];\n      for(let j=0;j<=checkerBoardSize-1;j++){\n        //將 19 個格子資料裝進 checkerBoardRow\n        checkerBoardRow.push(\n          <Square\n            key={[i,j]}\n            squarePosition={[i,j]}\n            squareData={boardData[i][j]}\n            handleChessData={handleChessData}\n          />\n        )\n      }\n      // 將 checkerBoardRow 裝進 div tag\n      checkerBoardAll.push(\n        <div className=\"board-row\">\n          {checkerBoardRow}\n        </div>\n      )\n    }\n    \n    return (\n      checkerBoardAll\n    )\n  }\n\n  //處理格子的點擊事件 // 這部分照作業提示來做的\n  const handleChessData = (squarePosition) => {\n    if (gameResult[0] === \"W\" || boardData[squarePosition[0]][squarePosition[1]]) return //如果結果開頭是 W 或是該格子有資料則回傳\n    const newBoardData = JSON.parse(JSON.stringify(boardData))\n    const chessColor = next ? \"black\" :\"white\"\n    newBoardData[squarePosition[0]][squarePosition[1]] = chessColor\n    setBoardData(newBoardData)\n    setNext(!next) // 設定黑白棋輪流下\n    const nextPlayer = !next ? \"black\" :\"white\"\n    //開始判斷輸贏\n    if (calculateWinner(newBoardData, squarePosition, chessColor)) {\n      setGameResult(`Winner is: ${calculateWinner(newBoardData, squarePosition, chessColor)}`)\n    } else {\n      setGameResult(`Next player is: ${nextPlayer}`)\n    }\n  }\n\n  //判斷勝負\n  function calculateWinner (Data, newChessPosition) {\n    var [x, y] = newChessPosition\n    //檢查列\n    for (var i = x-4; i<= x; i++) {\n      if (i < 0 || i> 14) continue\n      if (Data[i][y] === Data[i+1][y]\n        && Data[i+1][y] === Data[i+2][y]\n        && Data[i+2][y] === Data[i+3][y]\n        && Data[i+3][y] === Data[i+4][y]\n        && Data[i+4][y] === Data[i][y]\n        )\n      {\n        return Data[i][y]\n      }\n    }\n    // 檢查行\n    for (var i = y-4; i<= y; i++) {\n      if (i < 0 || i> 14) continue\n      if (Data[x][i] === Data[x][i+1]\n        && Data[x][i+1] === Data[x][i+2]\n        && Data[x][i+2] === Data[x][i+3]\n        && Data[x][i+3] === Data[x][i+4]\n        && Data[x][i+4] === Data[x][i]\n        )\n      {\n        return Data[x][i]\n      }\n    }\n    //檢查右斜\n    var j = 0 \n    for (var i = x+4; i >= x; i--) {\n      if (i>18 || i-4<0 || y-4+j<0 || y-4+j+4>18) {\n        j+=1\n        continue\n      }\n      if (Data[i][y-4+j] === Data[i-1][y-4+j+1]\n        && Data[i-1][y-4+j+1] === Data[i-2][y-4+j+2]\n        && Data[i-2][y-4+j+2] === Data[i-3][y-4+j+3]\n        && Data[i-3][y-4+j+3] === Data[i-4][y-4+j+4]\n        && Data[i-4][y-4+j+4] === Data[i][y-4+j]\n        )\n      {\n        return Data[i][y-4+j]\n      }\n      j+=1\n    }\n\n    //檢查左斜\n    var k = 0 \n    for (var i = x-4; i <= x; i++) {\n      if ( i+4 >18 || i<0 || y-4+k<0 ||  y-4+k+4 >18) {\n        k+=1\n        continue\n      }\n      if (Data[i][y-4+k] === Data[i+1][y-4+k+1]\n        && Data[i+1][y-4+k+1] === Data[i+2][y-4+k+2]\n        && Data[i+2][y-4+k+2] === Data[i+3][y-4+k+3]\n        && Data[i+3][y-4+k+3] === Data[i+4][y-4+k+4]\n        && Data[i+4][y-4+k+4] === Data[i][y-4+k]\n        )\n      {\n        return Data[i][y-4+k]\n      }\n      k+=1\n    }\n    return null\n  }\n\n  \n  // 設定點擊 Reset 棋盤\n  const handleReset = () => {\n    setBoardData(Array(19).fill(Array(19).fill(null)));\n    setNext(true) //True 設定黑棋先下\n    setGameResult(\"Next player is: black\") //True 設定黑棋先下\n  } \n\n  // 回傳 board components 結果\n  return(\n    <div className=\"board-section\">\n      <div className=\"status\">Welcome! {gameResult}</div>\n      <button className=\"reset-btn\" onClick={handleReset}>Reset the game</button>\n      {creatCheckerBoard ()}\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}